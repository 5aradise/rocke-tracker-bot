// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: users.sql

package queries

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :execlastid
INSERT INTO users (telegram_id, subscription_destination) 
VALUES (?, 'telegram')
`

func (q Queries) CreateUser(ctx context.Context, telegramID sql.NullInt64) (int64, error) {
	result, err := q.db.ExecContext(ctx, createUser, telegramID)
	if err != nil {
		return 0, err
	}
	return result.LastInsertId()
}

const deleteUserByTelegramID = `-- name: DeleteUserByTelegramID :execrows
DELETE FROM users
WHERE telegram_id = ?
`

func (q Queries) DeleteUserByTelegramID(ctx context.Context, telegramID sql.NullInt64) (int64, error) {
	result, err := q.db.ExecContext(ctx, deleteUserByTelegramID, telegramID)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected()
}
